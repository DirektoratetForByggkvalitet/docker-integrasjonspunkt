# MILJØVARIABLER
# APP_ENV   production|staging  Hvilket miljø som integrasjonspunktet skal bruke
# AZURE_KV_CERT_NAME  Navn på virksomhetssertifikatet i Azure Key Vault. Skal være et test-sertifikat for APP_ENV=staging
# AZURE_KV_NAME Navn på Azure Key Vault
# Service Principal: Må ha tilgang til å laste ned secret fra Key Vault, samt contribute for Azure Container Registry
# AZURE_SP_ID   Client ID for Service Principal i Azure
# AZURE_SP_SECRET Secret for Azure SP
# AZURE_TENANT_ID Tenant-ID for Service Principal i Azure

image: atlassian/default-image:3 # Uses Atlassian's default image as default

definitions:
  scripts:
    - script: &registryLogin
        echo ${AZURE_SP_SECRET} | docker login --username ${AZURE_SP_ID} --password-stdin ${DOCKER_REGISTRY}
  steps:
    - step: &buildImage
        name: 'Bygger DiBK sitt Digdir-integrasjonspunkt'
        services:
          - docker
        caches:
          - docker
        script:
          - envsubst < "integrasjonspunkt-local.properties.dist" > "integrasjonspunkt-local.properties"
          - echo "Laster ned Virksomhetssertifikat"
          - pipe: microsoft/azure-cli-run:1.1.0
            variables:
              AZURE_APP_ID: $AZURE_SP_ID
              AZURE_PASSWORD: $AZURE_SP_SECRET
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              CLI_COMMAND: az keyvault secret download --encoding base64 --file vs-auth.p12 --name ${AZURE_KV_CERT_NAME} --vault-name ${AZURE_KV_NAME}
          - echo "Laster ned CA-sertifikater fra BuyPass og Commfides"
          - mkdir -p docker/trustcerts
          - curl -Lso docker/trustcerts/BuyPassClass3RootCA.cer "https://github.com/felleslosninger/docs/raw/gh-pages/resources/begrep/sikkerDigitalPost/sikkerhet/sertifikater/prod/BPClass3RootCA.cer"
          - curl -Lso docker/trustcerts/CommfidesClass3RootCA.cer "https://github.com/felleslosninger/docs/raw/gh-pages/resources/begrep/sikkerDigitalPost/sikkerhet/sertifikater/prod/cpn%20rootca%20sha256%20class%203.crt"
          - empty=
          - echo "Oppretter passord på virksomhetssertifikatet"
          - openssl pkcs12 -in vs-auth.p12 -passin pass:$empty -nodes -out vs-auth.pem
          - openssl pkcs12 -export -in vs-auth.pem -out auth.p12 -passout pass:${KEYSTORE_PASS} -name ${KEYSTORE_ALIAS}
          - echo "Finner versjonsnummer på siste versjon av integrasjonspunktet"
          - curl -Lso maven-metadata.xml "https://repo1.maven.org/maven2/no/difi/meldingsutveksling/integrasjonspunkt/maven-metadata.xml"
          - IP_VER=$(sed -ne '/latest/{s/.*<latest>\(.*\)<\/latest>.*/\1/p;q;}' <<< cat maven-metadata.xml)
          - echo "Bruker versjon $IP_VER"
          - *registryLogin
          - IMAGE_NAME=${DOCKER_REGISTRY}/app/integrasjonspunkt
          - docker build . --pull -t ${IMAGE_NAME} --build-arg ALTINN_HOST=${ALTINN_HOST} --build-arg APP_VERSION=${IP_VER} --build-arg profile=${APP_ENV} --build-arg KS_PASS=${KEYSTORE_PASS} --build-arg KS_ALIAS=${KEYSTORE_ALIAS} -f docker/Dockerfile
          - docker tag ${IMAGE_NAME} ${IMAGE_NAME}:${APP_ENV}-${IP_VER}
          - docker tag ${IMAGE_NAME} ${IMAGE_NAME}:${APP_ENV}
          - docker tag ${IMAGE_NAME} ${IMAGE_NAME}:${IP_VER}
          - if [ "$APP_ENV" = "production" ]; then
          -   echo "Push av produksjonsversjon"
          -   docker push ${IMAGE_NAME}
          -   docker push ${IMAGE_NAME}:${IP_VER}
          - else
          -   echo "Push av staging-versjon"
          -   docker push ${IMAGE_NAME}:${APP_ENV}
          -   docker push ${IMAGE_NAME}:${APP_ENV}-${IP_VER}
          - fi

pipelines:
  branches:
    master:
      - step:
          <<: *buildImage
          name: 'Bygger integrasjonspunkt for staging-miljøet'
          deployment: Staging
  custom:
    build-production:
      - step:
          <<: *buildImage
          name: 'Bygger integrasjonspunkt for produksjon'
          deployment: Production
          

