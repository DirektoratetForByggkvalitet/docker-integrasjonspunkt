image: atlassian/default-image:3 # Uses Atlassian's default image as default

definitions:
  scripts:
    - script: &registryLogin
        echo ${AZURE_SP_SECRET} | docker login --username ${AZURE_SP_ID} --password-stdin ${DOCKER_REGISTRY}

pipelines:
  default:
    - step: 
        name: 'Bygger docker-image for DiBK sitt integrasjonspunkt'
        runs-on:
          - "self.hosted"
        services:
          - docker
        caches:
          - docker
        script:
          - envsubst < "integrasjonspunkt-local.properties.dist" > "integrasjonspunkt-local.properties"
          - echo "Laster ned Virksomhetssertifikat"
          - pipe: microsoft/azure-cli-run:1.1.0
            variables:
              AZURE_APP_ID: $AZURE_SP_ID
              AZURE_PASSWORD: $AZURE_SP_SECRET
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              CLI_COMMAND: az keyvault secret download --encoding base64 --file dibk-auth.p12 --name ${AZURE_KV_CERT_NAME} --vault-name ${AZURE_KV_NAME}
          - empty=
          - echo "Oppretter passord på sertifikatet"
          - openssl pkcs12 -in dibk-auth.p12 -passin pass:$empty -nodes -out dibk-auth.pem
          - openssl pkcs12 -export -in dibk-auth.pem -out auth.p12 -passout pass:${KEYSTORE_PASS} -name ${KEYSTORE_ALIAS}
          - echo "Finner versjonsnr på integrasjonspunktet"
          - curl -LO https://repo1.maven.org/maven2/no/difi/meldingsutveksling/integrasjonspunkt/maven-metadata.xml
          - APP_VER=$(sed -ne '/latest/{s/.*<latest>\(.*\)<\/latest>.*/\1/p;q;}' <<< cat maven-metadata.xml)
          - *registryLogin
          - IMAGE_NAME=${DOCKER_REGISTRY}/app/integrasjonspunkt
          - docker build . --pull -t ${IMAGE_NAME} --build-arg APP_VERSION=${APP_VER} --build-arg profile=${APP_ENV} --build-arg KS_PASS=${KEYSTORE_PASS} --build-arg KS_ALIAS=${KEYSTORE_ALIAS} -f docker/Dockerfile
          - docker push ${IMAGE_NAME}

