# MILJØVARIABLER
# APP_ENV   production|staging  Hvilket miljø som integrasjonspunktet skal bruke
# AZURE_KV_CERT_NAME  Navn på virksomhetssertifikatet i Azure Key Vault. Skal være et test-sertifikat for APP_ENV=staging
# AZURE_KV_NAME Navn på Azure Key Vault
# Service Principal: Må ha tilgang til å laste ned secret fra Key Vault, samt contribute for Azure Container Registry
# AZURE_SP_ID   Client ID for Service Principal i Azure
# AZURE_SP_SECRET Secret for Azure SP
# AZURE_TENANT_ID Tenant-ID for Service Principal i Azure

image: atlassian/default-image:3 # Uses Atlassian's default image as default

definitions:
  services:
    docker:
      image: docker:dind

  steps:
    - step: &buildImageX86
        name: 'Bygger DiBK sitt Digdir-integrasjonspunkt'
        caches:
          - docker
        runs-on:
          - self.hosted
          - linux
        script:
          - envsubst < "integrasjonspunkt-local.properties.dist" > "integrasjonspunkt-local.properties"
          - echo "Laster ned Virksomhetssertifikat"
          - envsubst < "azure-sp-auth.dist" > "azure-sp-auth.pem"
          - pipe: microsoft/azure-cli-run:1.1.0
            variables:
              AZURE_APP_ID: $AZURE_SP_ID
              AZURE_PASSWORD: azure-sp-auth.pem
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              CLI_COMMAND: az keyvault secret download --encoding base64 --file vs-auth.p12 --name ${AZURE_KV_CERT_NAME} --vault-name ${AZURE_KV_NAME}
          - echo "Laster ned CA-sertifikater fra BuyPass og Commfides"
          - mkdir -p docker/trustcerts
          - curl -Lso docker/trustcerts/BuyPassClass3RootCA.cer "https://github.com/felleslosninger/docs/raw/gh-pages/resources/begrep/sikkerDigitalPost/sikkerhet/sertifikater/prod/BPClass3RootCA.cer"
          - curl -Lso docker/trustcerts/CommfidesClass3RootCA.cer "https://github.com/felleslosninger/docs/raw/gh-pages/resources/begrep/sikkerDigitalPost/sikkerhet/sertifikater/prod/cpn%20rootca%20sha256%20class%203.crt"
          - empty=
          - echo "Oppretter passord på virksomhetssertifikatet"
          - openssl pkcs12 -in vs-auth.p12 -passin pass:$empty -nodes -out vs-auth.pem
          - openssl pkcs12 -export -in vs-auth.pem -out auth.p12 -passout pass:${KEYSTORE_PASS} -name ${KEYSTORE_ALIAS}
          - echo "Finner versjonsnummer på siste versjon av integrasjonspunktet"
          - curl -Lso maven-metadata.xml "https://repo1.maven.org/maven2/no/difi/meldingsutveksling/integrasjonspunkt/maven-metadata.xml"
          - export APP_VERSION=$(sed -ne '/latest/{s/.*<latest>\(.*\)<\/latest>.*/\1/p;q;}' <<< cat maven-metadata.xml)
          - echo "Bruker versjon ${APP_VERSION} av integrasjonspunktet"
          - envsubst < "docker/motd.template" > "docker/motd.sh"
          # - *registryLogin
          - export myArch=$(uname -m)
          - if [ "$myArch" = "x86_64" ]; then export myArch="amd64"; fi
          - curl -fsSLO https://github.com/docker/buildx/releases/download/v${BUILDX_VERSION}/buildx-v${BUILDX_VERSION}.linux-${myArch}
          - mkdir -p $HOME/.docker/cli-plugins/ && mv buildx-v${BUILDX_VERSION}.linux-amd64 $HOME/.docker/cli-plugins/docker-buildx && chmod +x ~/.docker/cli-plugins/docker-buildx # download buildx and move it to the docker plugin folder
          - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          - docker buildx create --name bob-the-builder --use
          - docker buildx bake --pull --push --file docker-bake.hcl ${APP_ENV}  

    - step: &buildImageMacOS
        name: Bygger image på macOS
        runs-on:
          - self.hosted
          - macos
          - applesilicon
        script:
          - unset DOCKER_HOST
          - security -v unlock-keychain -p ${RUNNER_KEYCHAIN_PASS} ~/Library/Keychains/login.keychain-db
          - envsubst < "azure-sp-auth.dist" > "azure-sp-auth.pem"
          - az login --service-principal -u ${AZURE_SP_ID} -p azure-sp-auth.pem --tenant ${AZURE_TENANT_ID}
          - az acr login --name ${DOCKER_REGISTRY%%.*}
          - echo "Laster ned Virksomhetssertifikat"
          - az keyvault secret download --encoding base64 --file vs-auth.p12 --name ${AZURE_KV_CERT_NAME} --vault-name ${AZURE_KV_NAME}
          - echo "Laster ned CA-sertifikater fra BuyPass og Commfides"
          - mkdir -p docker/trustcerts
          - curl -Lso docker/trustcerts/BuyPassClass3RootCA.cer "https://github.com/felleslosninger/docs/raw/gh-pages/resources/begrep/sikkerDigitalPost/sikkerhet/sertifikater/prod/BPClass3RootCA.cer"
          - curl -Lso docker/trustcerts/CommfidesClass3RootCA.cer "https://github.com/felleslosninger/docs/raw/gh-pages/resources/begrep/sikkerDigitalPost/sikkerhet/sertifikater/prod/cpn%20rootca%20sha256%20class%203.crt"
          - empty=
          - echo "Oppretter passord på virksomhetssertifikatet"
          - openssl pkcs12 -in vs-auth.p12 -passin pass:$empty -nodes -out vs-auth.pem
          - openssl pkcs12 -export -in vs-auth.pem -out auth.p12 -passout pass:${KEYSTORE_PASS} -name ${KEYSTORE_ALIAS}
          - echo "Finner versjonsnummer på siste versjon av integrasjonspunktet"
          - curl -Lso maven-metadata.xml "https://repo1.maven.org/maven2/no/difi/meldingsutveksling/integrasjonspunkt/maven-metadata.xml"
          - export APP_VERSION=$(sed -ne '/latest/{s/.*<latest>\(.*\)<\/latest>.*/\1/p;q;}' <<< cat maven-metadata.xml)
          - echo "Bruker versjon ${APP_VERSION} av integrasjonspunktet"
          - envsubst < "integrasjonspunkt-local.properties.dist" > "integrasjonspunkt-local.properties"
          - envsubst < "docker/motd.template" > "docker/motd.sh"
          - docker buildx bake --push --file docker-bake.hcl ${APP_ENV}
pipelines:
  branches:
    master:
      - step:
          <<: *buildImageMacOS
          name: 'Bygger integrasjonspunkt for staging-miljøet'
          deployment: Staging
  custom:
    build-production:
      - step:
          <<: *buildImageMacOS
          name: 'Bygger integrasjonspunkt for produksjon'
          deployment: Production
          

